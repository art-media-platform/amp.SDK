// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: amp.crates.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Amp {

  /// <summary>Holder for reflection information generated from amp.crates.proto</summary>
  public static partial class AmpCratesReflection {

    #region Descriptor
    /// <summary>File descriptor for amp.crates.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AmpCratesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBhbXAuY3JhdGVzLnByb3RvEgZjcmF0ZXMiJQoHS1ZFbnRyeRILCgNLZXkY",
            "ASABKAkSDQoFVmFsdWUYAiABKAki/QIKB0FwcFZhcnMSEQoJQXBwRG9tYWlu",
            "GAIgASgJEg8KB0FwcERlc2MYBCABKAkSEgoKT3JnSG9tZVVSTBgGIAEoCRIS",
            "CgpBcHBIb21lVVJMGAwgASgJEhkKEUNyYXRlc1NuYXBzaG90VVJMGA4gASgJ",
            "Ej0KD0FwcERvd25sb2FkVVJMcxgQIAMoCzIkLmNyYXRlcy5BcHBWYXJzLkFw",
            "cERvd25sb2FkVVJMc0VudHJ5EhIKClVSTFNjaGVtZXMYEiADKAkSLwoIU2V0",
            "dGluZ3MYFCADKAsyHS5jcmF0ZXMuQXBwVmFycy5TZXR0aW5nc0VudHJ5Eh4K",
            "BUxpbmtzGCggAygLMg8uY3JhdGVzLktWRW50cnkaNgoUQXBwRG93bmxvYWRV",
            "UkxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARovCg1T",
            "ZXR0aW5nc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "7AEKCkFzc2V0RW50cnkSIQoFRmxhZ3MYASABKA4yEi5jcmF0ZXMuQXNzZXRG",
            "bGFncxIQCghFbnRyeVVSSRgCIAEoCRINCgVMYWJlbBgDIAEoCRIPCgdDZW50",
            "ZXJYGAUgASgCEg8KB0NlbnRlclkYBiABKAISDwoHQ2VudGVyWhgHIAEoAhIQ",
            "CghFeHRlbnRzWBgKIAEoAhIQCghFeHRlbnRzWRgLIAEoAhIQCghFeHRlbnRz",
            "WhgMIAEoAhIQCghMb2NhbFVSSRgeIAEoCRIMCgRUYWdzGB8gASgJEhEKCVNo",
            "b3J0RGVzYxggIAEoCSJ0Cg5CdW5kbGVNYW5pZmVzdBITCgtCdW5kbGVUaXRs",
            "ZRgCIAEoCRIUCgxCdW5kbGVOYW1lSUQYAyABKAkSIgoGQXNzZXRzGAogAygL",
            "MhIuY3JhdGVzLkFzc2V0RW50cnkSEwoLTG9hZEFsbEhpbnQYFCABKAgiuQIK",
            "CUNyYXRlSW5mbxITCgtDcmF0ZVNjaGVtYRgBIAEoBRIOCgZJbnN0SUQYAiAB",
            "KA0SEAoIQ3JhdGVVUkkYBCABKAkSFQoNUHVibGlzaGVyTmFtZRgGIAEoCRIR",
            "CglDcmF0ZU5hbWUYCiABKAkSEQoJU2hvcnREZXNjGAsgASgJEgwKBFRhZ3MY",
            "DyABKAkSEwoLVGltZUNyZWF0ZWQYHiABKAMSEQoJVGltZUJ1aWx0GB8gASgD",
            "EhQKDE1ham9yVmVyc2lvbhgoIAEoBRIUCgxNaW5vclZlcnNpb24YKSABKAUS",
            "EwoLQnVpbGROdW1iZXIYKiABKAUSDwoHQnVpbGRJRBgtIAEoCRIPCgdIb21l",
            "VVJMGDIgASgJEgsKA1VSTBg3IAEoCRISCgpBcHByb3hTaXplGDwgASgDInEK",
            "DUNyYXRlTWFuaWZlc3QSHwoESW5mbxgBIAEoCzIRLmNyYXRlcy5DcmF0ZUlu",
            "Zm8SFgoOSWNvbkJ1bmRsZU5hbWUYBSABKAkSJwoHQnVuZGxlcxgKIAMoCzIW",
            "LmNyYXRlcy5CdW5kbGVNYW5pZmVzdCJXCg5DcmF0ZXNTbmFwc2hvdBINCgVS",
            "ZXZJRBgBIAEoAxITCgtEb3dubG9hZFVSTBgDIAEoCRIhCgZDcmF0ZXMYCiAD",
            "KAsyES5jcmF0ZXMuQ3JhdGVJbmZvKrQBCgpBc3NldEZsYWdzEgsKB05vRmxh",
            "Z3MQABINCglJc1RleHR1cmUQARIMCghJc1Nwcml0ZRACEg4KCklzTWF0ZXJp",
            "YWwQBBIPCgtJc1BsYWNlYWJsZRAIEg4KCklzTW9ub0NlbGwQEBIMCgdIYXNJ",
            "Y29uEIACEg4KCUlzUHJpdmF0ZRCABBINCghJc1NreWJveBCACBIOCglBdXRv",
            "U2NhbGUQgBASDgoJSXNTdXJmYWNlEIAgKiwKC0NyYXRlU2NoZW1hEhMKD1Vu",
            "ZGVmaW5lZFNjaGVtYRAAEggKBHYxMDAQZEIGqgIDQW1wYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Amp.AssetFlags), typeof(global::Amp.CrateSchema), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.KVEntry), global::Amp.KVEntry.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.AppVars), global::Amp.AppVars.Parser, new[]{ "AppDomain", "AppDesc", "OrgHomeURL", "AppHomeURL", "CratesSnapshotURL", "AppDownloadURLs", "URLSchemes", "Settings", "Links" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.AssetEntry), global::Amp.AssetEntry.Parser, new[]{ "Flags", "EntryURI", "Label", "CenterX", "CenterY", "CenterZ", "ExtentsX", "ExtentsY", "ExtentsZ", "LocalURI", "Tags", "ShortDesc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.BundleManifest), global::Amp.BundleManifest.Parser, new[]{ "BundleTitle", "BundleNameID", "Assets", "LoadAllHint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.CrateInfo), global::Amp.CrateInfo.Parser, new[]{ "CrateSchema", "InstID", "CrateURI", "PublisherName", "CrateName", "ShortDesc", "Tags", "TimeCreated", "TimeBuilt", "MajorVersion", "MinorVersion", "BuildNumber", "BuildID", "HomeURL", "URL", "ApproxSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.CrateManifest), global::Amp.CrateManifest.Parser, new[]{ "Info", "IconBundleName", "Bundles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Amp.CratesSnapshot), global::Amp.CratesSnapshot.Parser, new[]{ "RevID", "DownloadURL", "Crates" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AssetFlags {
    [pbr::OriginalName("NoFlags")] NoFlags = 0,
    [pbr::OriginalName("IsTexture")] IsTexture = 1,
    [pbr::OriginalName("IsSprite")] IsSprite = 2,
    [pbr::OriginalName("IsMaterial")] IsMaterial = 4,
    [pbr::OriginalName("IsPlaceable")] IsPlaceable = 8,
    [pbr::OriginalName("IsMonoCell")] IsMonoCell = 16,
    /// <summary>
    /// HasIcon means that this Asset includes an icon with the same name (and has IsIcon set),
    /// </summary>
    [pbr::OriginalName("HasIcon")] HasIcon = 256,
    /// <summary>
    /// IsPrivate means this item is not intended for general use and is not normally visible.
    /// </summary>
    [pbr::OriginalName("IsPrivate")] IsPrivate = 512,
    /// <summary>
    /// IsSkybox means this is a transform containing a Skybox component.
    /// </summary>
    [pbr::OriginalName("IsSkybox")] IsSkybox = 1024,
    /// <summary>
    /// AutoScale means this asset should be placed with auto scale enabled by default.
    /// </summary>
    [pbr::OriginalName("AutoScale")] AutoScale = 2048,
    /// <summary>
    /// IsSurface means this asset behaves like terrain and/or should be considered a constituent part of a scene.
    /// These objects should be opaque and have colliders attached to them
    /// e.g.  a building, a terrain formation, a wall
    /// </summary>
    [pbr::OriginalName("IsSurface")] IsSurface = 4096,
  }

  /// <summary>
  /// Enum values should be three base10 digits corresponding to the major, minor, and revision number.
  /// </summary>
  public enum CrateSchema {
    [pbr::OriginalName("UndefinedSchema")] UndefinedSchema = 0,
    /// <summary>
    /// v100 (April 2020) should be used for CrateInfo.CrateSchema
    /// </summary>
    [pbr::OriginalName("v100")] V100 = 100,
  }

  #endregion

  #region Messages
  /// <summary>
  /// KVEntry is a generic entry for any key-value pair.
  /// </summary>
  public sealed partial class KVEntry : pb::IMessage<KVEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KVEntry> _parser = new pb::MessageParser<KVEntry>(() => new KVEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KVEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KVEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KVEntry(KVEntry other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KVEntry Clone() {
      return new KVEntry(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KVEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KVEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KVEntry other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppVars : pb::IMessage<AppVars>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppVars> _parser = new pb::MessageParser<AppVars>(() => new AppVars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AppVars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppVars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppVars(AppVars other) : this() {
      appDomain_ = other.appDomain_;
      appDesc_ = other.appDesc_;
      orgHomeURL_ = other.orgHomeURL_;
      appHomeURL_ = other.appHomeURL_;
      cratesSnapshotURL_ = other.cratesSnapshotURL_;
      appDownloadURLs_ = other.appDownloadURLs_.Clone();
      uRLSchemes_ = other.uRLSchemes_.Clone();
      settings_ = other.settings_.Clone();
      links_ = other.links_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppVars Clone() {
      return new AppVars(this);
    }

    /// <summary>Field number for the "AppDomain" field.</summary>
    public const int AppDomainFieldNumber = 2;
    private string appDomain_ = "";
    /// <summary>
    /// AppDomain is the domain name used for primary queries (e.g. "plan-systems.org")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppDomain {
      get { return appDomain_; }
      set {
        appDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppDesc" field.</summary>
    public const int AppDescFieldNumber = 4;
    private string appDesc_ = "";
    /// <summary>
    /// AppDesc succinctly describes this org and is for humans.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppDesc {
      get { return appDesc_; }
      set {
        appDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OrgHomeURL" field.</summary>
    public const int OrgHomeURLFieldNumber = 6;
    private string orgHomeURL_ = "";
    /// <summary>
    /// OrgHomeURL is the home link for this org (e.g. "https://blockcities.com")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrgHomeURL {
      get { return orgHomeURL_; }
      set {
        orgHomeURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppHomeURL" field.</summary>
    public const int AppHomeURLFieldNumber = 12;
    private string appHomeURL_ = "";
    /// <summary>
    /// AppHomeURL points to the home URL for the app
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppHomeURL {
      get { return appHomeURL_; }
      set {
        appHomeURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CratesSnapshotURL" field.</summary>
    public const int CratesSnapshotURLFieldNumber = 14;
    private string cratesSnapshotURL_ = "";
    /// <summary>
    /// CratesSnapshotURL specifies where to load this org's CratesSnapshot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CratesSnapshotURL {
      get { return cratesSnapshotURL_; }
      set {
        cratesSnapshotURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppDownloadURLs" field.</summary>
    public const int AppDownloadURLsFieldNumber = 16;
    private static readonly pbc::MapField<string, string>.Codec _map_appDownloadURLs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 130);
    private readonly pbc::MapField<string, string> appDownloadURLs_ = new pbc::MapField<string, string>();
    /// <summary>
    /// AppDownloadURLs are a download URL for a given platform.
    /// A key of "" denotes an unknown platform
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> AppDownloadURLs {
      get { return appDownloadURLs_; }
    }

    /// <summary>Field number for the "URLSchemes" field.</summary>
    public const int URLSchemesFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _repeated_uRLSchemes_codec
        = pb::FieldCodec.ForString(146);
    private readonly pbc::RepeatedField<string> uRLSchemes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// URLSchemes declare URL schemes for this app's custom URL scheme (e.g. "amp://")
    /// The first entry is the primary scheme and the rest are alternately recognized schemes.
    /// URL schemas should always end with "://"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> URLSchemes {
      get { return uRLSchemes_; }
    }

    /// <summary>Field number for the "Settings" field.</summary>
    public const int SettingsFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_settings_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 162);
    private readonly pbc::MapField<string, string> settings_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Overrides default settings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Settings {
      get { return settings_; }
    }

    /// <summary>Field number for the "Links" field.</summary>
    public const int LinksFieldNumber = 40;
    private static readonly pb::FieldCodec<global::Amp.KVEntry> _repeated_links_codec
        = pb::FieldCodec.ForMessage(322, global::Amp.KVEntry.Parser);
    private readonly pbc::RepeatedField<global::Amp.KVEntry> links_ = new pbc::RepeatedField<global::Amp.KVEntry>();
    /// <summary>
    /// Links is a list of channel URIs for easy access.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Amp.KVEntry> Links {
      get { return links_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AppVars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AppVars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppDomain != other.AppDomain) return false;
      if (AppDesc != other.AppDesc) return false;
      if (OrgHomeURL != other.OrgHomeURL) return false;
      if (AppHomeURL != other.AppHomeURL) return false;
      if (CratesSnapshotURL != other.CratesSnapshotURL) return false;
      if (!AppDownloadURLs.Equals(other.AppDownloadURLs)) return false;
      if(!uRLSchemes_.Equals(other.uRLSchemes_)) return false;
      if (!Settings.Equals(other.Settings)) return false;
      if(!links_.Equals(other.links_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AppDomain.Length != 0) hash ^= AppDomain.GetHashCode();
      if (AppDesc.Length != 0) hash ^= AppDesc.GetHashCode();
      if (OrgHomeURL.Length != 0) hash ^= OrgHomeURL.GetHashCode();
      if (AppHomeURL.Length != 0) hash ^= AppHomeURL.GetHashCode();
      if (CratesSnapshotURL.Length != 0) hash ^= CratesSnapshotURL.GetHashCode();
      hash ^= AppDownloadURLs.GetHashCode();
      hash ^= uRLSchemes_.GetHashCode();
      hash ^= Settings.GetHashCode();
      hash ^= links_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AppDomain.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppDomain);
      }
      if (AppDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppDesc);
      }
      if (OrgHomeURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrgHomeURL);
      }
      if (AppHomeURL.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AppHomeURL);
      }
      if (CratesSnapshotURL.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CratesSnapshotURL);
      }
      appDownloadURLs_.WriteTo(output, _map_appDownloadURLs_codec);
      uRLSchemes_.WriteTo(output, _repeated_uRLSchemes_codec);
      settings_.WriteTo(output, _map_settings_codec);
      links_.WriteTo(output, _repeated_links_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AppDomain.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppDomain);
      }
      if (AppDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppDesc);
      }
      if (OrgHomeURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrgHomeURL);
      }
      if (AppHomeURL.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AppHomeURL);
      }
      if (CratesSnapshotURL.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CratesSnapshotURL);
      }
      appDownloadURLs_.WriteTo(ref output, _map_appDownloadURLs_codec);
      uRLSchemes_.WriteTo(ref output, _repeated_uRLSchemes_codec);
      settings_.WriteTo(ref output, _map_settings_codec);
      links_.WriteTo(ref output, _repeated_links_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AppDomain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppDomain);
      }
      if (AppDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppDesc);
      }
      if (OrgHomeURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrgHomeURL);
      }
      if (AppHomeURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppHomeURL);
      }
      if (CratesSnapshotURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CratesSnapshotURL);
      }
      size += appDownloadURLs_.CalculateSize(_map_appDownloadURLs_codec);
      size += uRLSchemes_.CalculateSize(_repeated_uRLSchemes_codec);
      size += settings_.CalculateSize(_map_settings_codec);
      size += links_.CalculateSize(_repeated_links_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AppVars other) {
      if (other == null) {
        return;
      }
      if (other.AppDomain.Length != 0) {
        AppDomain = other.AppDomain;
      }
      if (other.AppDesc.Length != 0) {
        AppDesc = other.AppDesc;
      }
      if (other.OrgHomeURL.Length != 0) {
        OrgHomeURL = other.OrgHomeURL;
      }
      if (other.AppHomeURL.Length != 0) {
        AppHomeURL = other.AppHomeURL;
      }
      if (other.CratesSnapshotURL.Length != 0) {
        CratesSnapshotURL = other.CratesSnapshotURL;
      }
      appDownloadURLs_.Add(other.appDownloadURLs_);
      uRLSchemes_.Add(other.uRLSchemes_);
      settings_.Add(other.settings_);
      links_.Add(other.links_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            AppDomain = input.ReadString();
            break;
          }
          case 34: {
            AppDesc = input.ReadString();
            break;
          }
          case 50: {
            OrgHomeURL = input.ReadString();
            break;
          }
          case 98: {
            AppHomeURL = input.ReadString();
            break;
          }
          case 114: {
            CratesSnapshotURL = input.ReadString();
            break;
          }
          case 130: {
            appDownloadURLs_.AddEntriesFrom(input, _map_appDownloadURLs_codec);
            break;
          }
          case 146: {
            uRLSchemes_.AddEntriesFrom(input, _repeated_uRLSchemes_codec);
            break;
          }
          case 162: {
            settings_.AddEntriesFrom(input, _map_settings_codec);
            break;
          }
          case 322: {
            links_.AddEntriesFrom(input, _repeated_links_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            AppDomain = input.ReadString();
            break;
          }
          case 34: {
            AppDesc = input.ReadString();
            break;
          }
          case 50: {
            OrgHomeURL = input.ReadString();
            break;
          }
          case 98: {
            AppHomeURL = input.ReadString();
            break;
          }
          case 114: {
            CratesSnapshotURL = input.ReadString();
            break;
          }
          case 130: {
            appDownloadURLs_.AddEntriesFrom(ref input, _map_appDownloadURLs_codec);
            break;
          }
          case 146: {
            uRLSchemes_.AddEntriesFrom(ref input, _repeated_uRLSchemes_codec);
            break;
          }
          case 162: {
            settings_.AddEntriesFrom(ref input, _map_settings_codec);
            break;
          }
          case 322: {
            links_.AddEntriesFrom(ref input, _repeated_links_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AssetEntry : pb::IMessage<AssetEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AssetEntry> _parser = new pb::MessageParser<AssetEntry>(() => new AssetEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AssetEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetEntry(AssetEntry other) : this() {
      flags_ = other.flags_;
      entryURI_ = other.entryURI_;
      label_ = other.label_;
      centerX_ = other.centerX_;
      centerY_ = other.centerY_;
      centerZ_ = other.centerZ_;
      extentsX_ = other.extentsX_;
      extentsY_ = other.extentsY_;
      extentsZ_ = other.extentsZ_;
      localURI_ = other.localURI_;
      tags_ = other.tags_;
      shortDesc_ = other.shortDesc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssetEntry Clone() {
      return new AssetEntry(this);
    }

    /// <summary>Field number for the "Flags" field.</summary>
    public const int FlagsFieldNumber = 1;
    private global::Amp.AssetFlags flags_ = global::Amp.AssetFlags.NoFlags;
    /// <summary>
    /// AssetFlags specifies properties about this AssetEntry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Amp.AssetFlags Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "EntryURI" field.</summary>
    public const int EntryURIFieldNumber = 2;
    private string entryURI_ = "";
    /// <summary>
    /// URI is a unix-style pathname that identifies an asset within a crate.
    /// By convention this URI does *not* start or end with '/'
    /// An asset URI has the form "{CrateURI}/{EntryURI}"
    /// If two or more assets have same EntryURI then only one is accessible.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntryURI {
      get { return entryURI_; }
      set {
        entryURI_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Label" field.</summary>
    public const int LabelFieldNumber = 3;
    private string label_ = "";
    /// <summary>
    /// Name is the human-readable label for this asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CenterX" field.</summary>
    public const int CenterXFieldNumber = 5;
    private float centerX_;
    /// <summary>
    /// CenterX and CenterZ specify the positional center of this asset (and are typically 0).
    /// CenterY is the distance above the baseline (y=0) to the y center-point height of this asset.
    /// Y is considered to be the *vertical* (up) direction and by convention rest on the plane y=0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CenterX {
      get { return centerX_; }
      set {
        centerX_ = value;
      }
    }

    /// <summary>Field number for the "CenterY" field.</summary>
    public const int CenterYFieldNumber = 6;
    private float centerY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CenterY {
      get { return centerY_; }
      set {
        centerY_ = value;
      }
    }

    /// <summary>Field number for the "CenterZ" field.</summary>
    public const int CenterZFieldNumber = 7;
    private float centerZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CenterZ {
      get { return centerZ_; }
      set {
        centerZ_ = value;
      }
    }

    /// <summary>Field number for the "ExtentsX" field.</summary>
    public const int ExtentsXFieldNumber = 10;
    private float extentsX_;
    /// <summary>
    /// Extents specify the extents as distance from the center to the extent of the asset on each axis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExtentsX {
      get { return extentsX_; }
      set {
        extentsX_ = value;
      }
    }

    /// <summary>Field number for the "ExtentsY" field.</summary>
    public const int ExtentsYFieldNumber = 11;
    private float extentsY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExtentsY {
      get { return extentsY_; }
      set {
        extentsY_ = value;
      }
    }

    /// <summary>Field number for the "ExtentsZ" field.</summary>
    public const int ExtentsZFieldNumber = 12;
    private float extentsZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExtentsZ {
      get { return extentsZ_; }
      set {
        extentsZ_ = value;
      }
    }

    /// <summary>Field number for the "LocalURI" field.</summary>
    public const int LocalURIFieldNumber = 30;
    private string localURI_ = "";
    /// <summary>
    /// Reserved for runtime use -- defaults to empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LocalURI {
      get { return localURI_; }
      set {
        localURI_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 31;
    private string tags_ = "";
    /// <summary>
    /// Comma delimited and whitespace-trimmed list of of tags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShortDesc" field.</summary>
    public const int ShortDescFieldNumber = 32;
    private string shortDesc_ = "";
    /// <summary>
    /// A short phrase or fragment describing this asset, starting with an article where appropriate. e.g.:
    ///      "A typical 6 crew member fire truck"
    ///      "A leading U.S. naval ship-based helicopter"
    ///      "The Texas capital building located in Austin"
    ///      "An animated scared-geometry inspired flat seal"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortDesc {
      get { return shortDesc_; }
      set {
        shortDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AssetEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AssetEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flags != other.Flags) return false;
      if (EntryURI != other.EntryURI) return false;
      if (Label != other.Label) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterX, other.CenterX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterY, other.CenterY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterZ, other.CenterZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentsX, other.ExtentsX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentsY, other.ExtentsY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentsZ, other.ExtentsZ)) return false;
      if (LocalURI != other.LocalURI) return false;
      if (Tags != other.Tags) return false;
      if (ShortDesc != other.ShortDesc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Flags != global::Amp.AssetFlags.NoFlags) hash ^= Flags.GetHashCode();
      if (EntryURI.Length != 0) hash ^= EntryURI.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (CenterX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterX);
      if (CenterY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterY);
      if (CenterZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterZ);
      if (ExtentsX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentsX);
      if (ExtentsY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentsY);
      if (ExtentsZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentsZ);
      if (LocalURI.Length != 0) hash ^= LocalURI.GetHashCode();
      if (Tags.Length != 0) hash ^= Tags.GetHashCode();
      if (ShortDesc.Length != 0) hash ^= ShortDesc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Flags != global::Amp.AssetFlags.NoFlags) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Flags);
      }
      if (EntryURI.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntryURI);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Label);
      }
      if (CenterX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CenterX);
      }
      if (CenterY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(CenterY);
      }
      if (CenterZ != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(CenterZ);
      }
      if (ExtentsX != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(ExtentsX);
      }
      if (ExtentsY != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(ExtentsY);
      }
      if (ExtentsZ != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(ExtentsZ);
      }
      if (LocalURI.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(LocalURI);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Tags);
      }
      if (ShortDesc.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(ShortDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Flags != global::Amp.AssetFlags.NoFlags) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Flags);
      }
      if (EntryURI.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntryURI);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Label);
      }
      if (CenterX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CenterX);
      }
      if (CenterY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(CenterY);
      }
      if (CenterZ != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(CenterZ);
      }
      if (ExtentsX != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(ExtentsX);
      }
      if (ExtentsY != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(ExtentsY);
      }
      if (ExtentsZ != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(ExtentsZ);
      }
      if (LocalURI.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(LocalURI);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Tags);
      }
      if (ShortDesc.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(ShortDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Flags != global::Amp.AssetFlags.NoFlags) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Flags);
      }
      if (EntryURI.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntryURI);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (CenterX != 0F) {
        size += 1 + 4;
      }
      if (CenterY != 0F) {
        size += 1 + 4;
      }
      if (CenterZ != 0F) {
        size += 1 + 4;
      }
      if (ExtentsX != 0F) {
        size += 1 + 4;
      }
      if (ExtentsY != 0F) {
        size += 1 + 4;
      }
      if (ExtentsZ != 0F) {
        size += 1 + 4;
      }
      if (LocalURI.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LocalURI);
      }
      if (Tags.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tags);
      }
      if (ShortDesc.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShortDesc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AssetEntry other) {
      if (other == null) {
        return;
      }
      if (other.Flags != global::Amp.AssetFlags.NoFlags) {
        Flags = other.Flags;
      }
      if (other.EntryURI.Length != 0) {
        EntryURI = other.EntryURI;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.CenterX != 0F) {
        CenterX = other.CenterX;
      }
      if (other.CenterY != 0F) {
        CenterY = other.CenterY;
      }
      if (other.CenterZ != 0F) {
        CenterZ = other.CenterZ;
      }
      if (other.ExtentsX != 0F) {
        ExtentsX = other.ExtentsX;
      }
      if (other.ExtentsY != 0F) {
        ExtentsY = other.ExtentsY;
      }
      if (other.ExtentsZ != 0F) {
        ExtentsZ = other.ExtentsZ;
      }
      if (other.LocalURI.Length != 0) {
        LocalURI = other.LocalURI;
      }
      if (other.Tags.Length != 0) {
        Tags = other.Tags;
      }
      if (other.ShortDesc.Length != 0) {
        ShortDesc = other.ShortDesc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Flags = (global::Amp.AssetFlags) input.ReadEnum();
            break;
          }
          case 18: {
            EntryURI = input.ReadString();
            break;
          }
          case 26: {
            Label = input.ReadString();
            break;
          }
          case 45: {
            CenterX = input.ReadFloat();
            break;
          }
          case 53: {
            CenterY = input.ReadFloat();
            break;
          }
          case 61: {
            CenterZ = input.ReadFloat();
            break;
          }
          case 85: {
            ExtentsX = input.ReadFloat();
            break;
          }
          case 93: {
            ExtentsY = input.ReadFloat();
            break;
          }
          case 101: {
            ExtentsZ = input.ReadFloat();
            break;
          }
          case 242: {
            LocalURI = input.ReadString();
            break;
          }
          case 250: {
            Tags = input.ReadString();
            break;
          }
          case 258: {
            ShortDesc = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Flags = (global::Amp.AssetFlags) input.ReadEnum();
            break;
          }
          case 18: {
            EntryURI = input.ReadString();
            break;
          }
          case 26: {
            Label = input.ReadString();
            break;
          }
          case 45: {
            CenterX = input.ReadFloat();
            break;
          }
          case 53: {
            CenterY = input.ReadFloat();
            break;
          }
          case 61: {
            CenterZ = input.ReadFloat();
            break;
          }
          case 85: {
            ExtentsX = input.ReadFloat();
            break;
          }
          case 93: {
            ExtentsY = input.ReadFloat();
            break;
          }
          case 101: {
            ExtentsZ = input.ReadFloat();
            break;
          }
          case 242: {
            LocalURI = input.ReadString();
            break;
          }
          case 250: {
            Tags = input.ReadString();
            break;
          }
          case 258: {
            ShortDesc = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BundleManifest : pb::IMessage<BundleManifest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BundleManifest> _parser = new pb::MessageParser<BundleManifest>(() => new BundleManifest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BundleManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BundleManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BundleManifest(BundleManifest other) : this() {
      bundleTitle_ = other.bundleTitle_;
      bundleNameID_ = other.bundleNameID_;
      assets_ = other.assets_.Clone();
      loadAllHint_ = other.loadAllHint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BundleManifest Clone() {
      return new BundleManifest(this);
    }

    /// <summary>Field number for the "BundleTitle" field.</summary>
    public const int BundleTitleFieldNumber = 2;
    private string bundleTitle_ = "";
    /// <summary>
    /// BundleTitle is how the outside world sees this bundle and has no other impact.
    /// This means it can change from build to build and contain any Unicode characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BundleTitle {
      get { return bundleTitle_; }
      set {
        bundleTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BundleNameID" field.</summary>
    public const int BundleNameIDFieldNumber = 3;
    private string bundleNameID_ = "";
    /// <summary>
    /// BundleNameID is how this bundle is internally identified and expressed the filename of this bundle
    /// This is case sensitive, contains only path-safe characters (sans /:\&lt;>|?*\"), and does not terminate in '.' or whitespace.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BundleNameID {
      get { return bundleNameID_; }
      set {
        bundleNameID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Assets" field.</summary>
    public const int AssetsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Amp.AssetEntry> _repeated_assets_codec
        = pb::FieldCodec.ForMessage(82, global::Amp.AssetEntry.Parser);
    private readonly pbc::RepeatedField<global::Amp.AssetEntry> assets_ = new pbc::RepeatedField<global::Amp.AssetEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Amp.AssetEntry> Assets {
      get { return assets_; }
    }

    /// <summary>Field number for the "LoadAllHint" field.</summary>
    public const int LoadAllHintFieldNumber = 20;
    private bool loadAllHint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LoadAllHint {
      get { return loadAllHint_; }
      set {
        loadAllHint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BundleManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BundleManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BundleTitle != other.BundleTitle) return false;
      if (BundleNameID != other.BundleNameID) return false;
      if(!assets_.Equals(other.assets_)) return false;
      if (LoadAllHint != other.LoadAllHint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BundleTitle.Length != 0) hash ^= BundleTitle.GetHashCode();
      if (BundleNameID.Length != 0) hash ^= BundleNameID.GetHashCode();
      hash ^= assets_.GetHashCode();
      if (LoadAllHint != false) hash ^= LoadAllHint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BundleTitle.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BundleTitle);
      }
      if (BundleNameID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BundleNameID);
      }
      assets_.WriteTo(output, _repeated_assets_codec);
      if (LoadAllHint != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(LoadAllHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BundleTitle.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BundleTitle);
      }
      if (BundleNameID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BundleNameID);
      }
      assets_.WriteTo(ref output, _repeated_assets_codec);
      if (LoadAllHint != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(LoadAllHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BundleTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleTitle);
      }
      if (BundleNameID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleNameID);
      }
      size += assets_.CalculateSize(_repeated_assets_codec);
      if (LoadAllHint != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BundleManifest other) {
      if (other == null) {
        return;
      }
      if (other.BundleTitle.Length != 0) {
        BundleTitle = other.BundleTitle;
      }
      if (other.BundleNameID.Length != 0) {
        BundleNameID = other.BundleNameID;
      }
      assets_.Add(other.assets_);
      if (other.LoadAllHint != false) {
        LoadAllHint = other.LoadAllHint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            BundleTitle = input.ReadString();
            break;
          }
          case 26: {
            BundleNameID = input.ReadString();
            break;
          }
          case 82: {
            assets_.AddEntriesFrom(input, _repeated_assets_codec);
            break;
          }
          case 160: {
            LoadAllHint = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            BundleTitle = input.ReadString();
            break;
          }
          case 26: {
            BundleNameID = input.ReadString();
            break;
          }
          case 82: {
            assets_.AddEntriesFrom(ref input, _repeated_assets_codec);
            break;
          }
          case 160: {
            LoadAllHint = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CrateInfo represents a Crate, the fundamental unit of PLAN's asset/package manager.
  /// </summary>
  public sealed partial class CrateInfo : pb::IMessage<CrateInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CrateInfo> _parser = new pb::MessageParser<CrateInfo>(() => new CrateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CrateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrateInfo(CrateInfo other) : this() {
      crateSchema_ = other.crateSchema_;
      instID_ = other.instID_;
      crateURI_ = other.crateURI_;
      publisherName_ = other.publisherName_;
      crateName_ = other.crateName_;
      shortDesc_ = other.shortDesc_;
      tags_ = other.tags_;
      timeCreated_ = other.timeCreated_;
      timeBuilt_ = other.timeBuilt_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      buildNumber_ = other.buildNumber_;
      buildID_ = other.buildID_;
      homeURL_ = other.homeURL_;
      uRL_ = other.uRL_;
      approxSize_ = other.approxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrateInfo Clone() {
      return new CrateInfo(this);
    }

    /// <summary>Field number for the "CrateSchema" field.</summary>
    public const int CrateSchemaFieldNumber = 1;
    private int crateSchema_;
    /// <summary>
    /// CrateSchema communicates which build and packaging schema was used for this crate build .
    /// This value should be the integer value of a valid CrateSchema.vNNN enum.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CrateSchema {
      get { return crateSchema_; }
      set {
        crateSchema_ = value;
      }
    }

    /// <summary>Field number for the "InstID" field.</summary>
    public const int InstIDFieldNumber = 2;
    private uint instID_;
    /// <summary>
    /// InstID is 0 by default and reserved for a runtime manager to reference a crate via issuing integers.
    /// If non-zero, it will not change and no other instance will have the same value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InstID {
      get { return instID_; }
      set {
        instID_ = value;
      }
    }

    /// <summary>Field number for the "CrateURI" field.</summary>
    public const int CrateURIFieldNumber = 4;
    private string crateURI_ = "";
    /// <summary>
    /// CrateURI takes the form "{PublisherID}/{CrateID}" is used to globally reference assets in this crate.
    /// This URI string can only contains chars in [A-Za-z0-9_.-] (other than the separating '/' char).
    /// PublisherID uniquely identifies the author/owner/publisher of this crate (and potentially other crates).
    /// CrateID uniquely identifies this crate for the given publisher and all subsequent revisions.
    ///    "plan-systems.org/plan.app.ui"
    ///    "plan-systems.org/about-plan-systems"
    ///    "themushroom.farm/land"
    ///    "themushroom.farm/mycology-201"
    ///    "the-smiths.family/123-Maple"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CrateURI {
      get { return crateURI_; }
      set {
        crateURI_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PublisherName" field.</summary>
    public const int PublisherNameFieldNumber = 6;
    private string publisherName_ = "";
    /// <summary>
    /// PublisherName is a human-readable of the author/owner/publisher of this crate and can change without repercussions (i.e. is purely optical).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PublisherName {
      get { return publisherName_; }
      set {
        publisherName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CrateName" field.</summary>
    public const int CrateNameFieldNumber = 10;
    private string crateName_ = "";
    /// <summary>
    /// CrateName is a human-readable title for this crate and can change without repercussions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CrateName {
      get { return crateName_; }
      set {
        crateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShortDesc" field.</summary>
    public const int ShortDescFieldNumber = 11;
    private string shortDesc_ = "";
    /// <summary>
    /// ShortDesc describes this crate in a brief phrase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortDesc {
      get { return shortDesc_; }
      set {
        shortDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 15;
    private string tags_ = "";
    /// <summary>
    /// Comma delimited and whitespace-trimmed list of of tags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tags {
      get { return tags_; }
      set {
        tags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeCreated" field.</summary>
    public const int TimeCreatedFieldNumber = 30;
    private long timeCreated_;
    /// <summary>
    /// TimeCreated is UTC value (in seconds) when this crate first created (and does not change)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeCreated {
      get { return timeCreated_; }
      set {
        timeCreated_ = value;
      }
    }

    /// <summary>Field number for the "TimeBuilt" field.</summary>
    public const int TimeBuiltFieldNumber = 31;
    private long timeBuilt_;
    /// <summary>
    /// TimeBuilt is UTC value (in seconds) when this crate was built.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeBuilt {
      get { return timeBuilt_; }
      set {
        timeBuilt_ = value;
      }
    }

    /// <summary>Field number for the "MajorVersion" field.</summary>
    public const int MajorVersionFieldNumber = 40;
    private int majorVersion_;
    /// <summary>
    /// VersionID uniquely identifies this build and has the form "v{MajorNum}.{MinorNum}.{BuildNum}"
    /// e.g. "v1.11.201"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "MinorVersion" field.</summary>
    public const int MinorVersionFieldNumber = 41;
    private int minorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    /// <summary>Field number for the "BuildNumber" field.</summary>
    public const int BuildNumberFieldNumber = 42;
    private int buildNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildNumber {
      get { return buildNumber_; }
      set {
        buildNumber_ = value;
      }
    }

    /// <summary>Field number for the "BuildID" field.</summary>
    public const int BuildIDFieldNumber = 45;
    private string buildID_ = "";
    /// <summary>
    /// BuildID uniquely identifies a particular crate build/version.
    /// This value should have no spaces and only have '.', '_', or '-' (and starts and ends with an alpha-numeric)
    /// By convention, the format is "yyMMdd-{VersionID}" (so that sorting by BuildID string yields the most recent release).
    /// e.g. "210320-v0.1.11"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BuildID {
      get { return buildID_; }
      set {
        buildID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HomeURL" field.</summary>
    public const int HomeURLFieldNumber = 50;
    private string homeURL_ = "";
    /// <summary>
    /// HomeURL is an optional link that allows a human to learn more about this crate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeURL {
      get { return homeURL_; }
      set {
        homeURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "URL" field.</summary>
    public const int URLFieldNumber = 55;
    private string uRL_ = "";
    /// <summary>
    /// URL is an optional string available to specifying URL to download this crate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string URL {
      get { return uRL_; }
      set {
        uRL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApproxSize" field.</summary>
    public const int ApproxSizeFieldNumber = 60;
    private long approxSize_;
    /// <summary>
    /// Approximate size of this crate in bytes (or 0 if unknown)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ApproxSize {
      get { return approxSize_; }
      set {
        approxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CrateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CrateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CrateSchema != other.CrateSchema) return false;
      if (InstID != other.InstID) return false;
      if (CrateURI != other.CrateURI) return false;
      if (PublisherName != other.PublisherName) return false;
      if (CrateName != other.CrateName) return false;
      if (ShortDesc != other.ShortDesc) return false;
      if (Tags != other.Tags) return false;
      if (TimeCreated != other.TimeCreated) return false;
      if (TimeBuilt != other.TimeBuilt) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      if (BuildNumber != other.BuildNumber) return false;
      if (BuildID != other.BuildID) return false;
      if (HomeURL != other.HomeURL) return false;
      if (URL != other.URL) return false;
      if (ApproxSize != other.ApproxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CrateSchema != 0) hash ^= CrateSchema.GetHashCode();
      if (InstID != 0) hash ^= InstID.GetHashCode();
      if (CrateURI.Length != 0) hash ^= CrateURI.GetHashCode();
      if (PublisherName.Length != 0) hash ^= PublisherName.GetHashCode();
      if (CrateName.Length != 0) hash ^= CrateName.GetHashCode();
      if (ShortDesc.Length != 0) hash ^= ShortDesc.GetHashCode();
      if (Tags.Length != 0) hash ^= Tags.GetHashCode();
      if (TimeCreated != 0L) hash ^= TimeCreated.GetHashCode();
      if (TimeBuilt != 0L) hash ^= TimeBuilt.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (BuildNumber != 0) hash ^= BuildNumber.GetHashCode();
      if (BuildID.Length != 0) hash ^= BuildID.GetHashCode();
      if (HomeURL.Length != 0) hash ^= HomeURL.GetHashCode();
      if (URL.Length != 0) hash ^= URL.GetHashCode();
      if (ApproxSize != 0L) hash ^= ApproxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CrateSchema != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CrateSchema);
      }
      if (InstID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(InstID);
      }
      if (CrateURI.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CrateURI);
      }
      if (PublisherName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PublisherName);
      }
      if (CrateName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CrateName);
      }
      if (ShortDesc.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ShortDesc);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Tags);
      }
      if (TimeCreated != 0L) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(TimeCreated);
      }
      if (TimeBuilt != 0L) {
        output.WriteRawTag(248, 1);
        output.WriteInt64(TimeBuilt);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(MinorVersion);
      }
      if (BuildNumber != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(BuildNumber);
      }
      if (BuildID.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(BuildID);
      }
      if (HomeURL.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(HomeURL);
      }
      if (URL.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(URL);
      }
      if (ApproxSize != 0L) {
        output.WriteRawTag(224, 3);
        output.WriteInt64(ApproxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CrateSchema != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CrateSchema);
      }
      if (InstID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(InstID);
      }
      if (CrateURI.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CrateURI);
      }
      if (PublisherName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PublisherName);
      }
      if (CrateName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CrateName);
      }
      if (ShortDesc.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ShortDesc);
      }
      if (Tags.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Tags);
      }
      if (TimeCreated != 0L) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(TimeCreated);
      }
      if (TimeBuilt != 0L) {
        output.WriteRawTag(248, 1);
        output.WriteInt64(TimeBuilt);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(MinorVersion);
      }
      if (BuildNumber != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(BuildNumber);
      }
      if (BuildID.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(BuildID);
      }
      if (HomeURL.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(HomeURL);
      }
      if (URL.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(URL);
      }
      if (ApproxSize != 0L) {
        output.WriteRawTag(224, 3);
        output.WriteInt64(ApproxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CrateSchema != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CrateSchema);
      }
      if (InstID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InstID);
      }
      if (CrateURI.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrateURI);
      }
      if (PublisherName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublisherName);
      }
      if (CrateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrateName);
      }
      if (ShortDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortDesc);
      }
      if (Tags.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tags);
      }
      if (TimeCreated != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TimeCreated);
      }
      if (TimeBuilt != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TimeBuilt);
      }
      if (MajorVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (BuildNumber != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BuildNumber);
      }
      if (BuildID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BuildID);
      }
      if (HomeURL.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeURL);
      }
      if (URL.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(URL);
      }
      if (ApproxSize != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ApproxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CrateInfo other) {
      if (other == null) {
        return;
      }
      if (other.CrateSchema != 0) {
        CrateSchema = other.CrateSchema;
      }
      if (other.InstID != 0) {
        InstID = other.InstID;
      }
      if (other.CrateURI.Length != 0) {
        CrateURI = other.CrateURI;
      }
      if (other.PublisherName.Length != 0) {
        PublisherName = other.PublisherName;
      }
      if (other.CrateName.Length != 0) {
        CrateName = other.CrateName;
      }
      if (other.ShortDesc.Length != 0) {
        ShortDesc = other.ShortDesc;
      }
      if (other.Tags.Length != 0) {
        Tags = other.Tags;
      }
      if (other.TimeCreated != 0L) {
        TimeCreated = other.TimeCreated;
      }
      if (other.TimeBuilt != 0L) {
        TimeBuilt = other.TimeBuilt;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      if (other.BuildNumber != 0) {
        BuildNumber = other.BuildNumber;
      }
      if (other.BuildID.Length != 0) {
        BuildID = other.BuildID;
      }
      if (other.HomeURL.Length != 0) {
        HomeURL = other.HomeURL;
      }
      if (other.URL.Length != 0) {
        URL = other.URL;
      }
      if (other.ApproxSize != 0L) {
        ApproxSize = other.ApproxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CrateSchema = input.ReadInt32();
            break;
          }
          case 16: {
            InstID = input.ReadUInt32();
            break;
          }
          case 34: {
            CrateURI = input.ReadString();
            break;
          }
          case 50: {
            PublisherName = input.ReadString();
            break;
          }
          case 82: {
            CrateName = input.ReadString();
            break;
          }
          case 90: {
            ShortDesc = input.ReadString();
            break;
          }
          case 122: {
            Tags = input.ReadString();
            break;
          }
          case 240: {
            TimeCreated = input.ReadInt64();
            break;
          }
          case 248: {
            TimeBuilt = input.ReadInt64();
            break;
          }
          case 320: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 328: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 336: {
            BuildNumber = input.ReadInt32();
            break;
          }
          case 362: {
            BuildID = input.ReadString();
            break;
          }
          case 402: {
            HomeURL = input.ReadString();
            break;
          }
          case 442: {
            URL = input.ReadString();
            break;
          }
          case 480: {
            ApproxSize = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CrateSchema = input.ReadInt32();
            break;
          }
          case 16: {
            InstID = input.ReadUInt32();
            break;
          }
          case 34: {
            CrateURI = input.ReadString();
            break;
          }
          case 50: {
            PublisherName = input.ReadString();
            break;
          }
          case 82: {
            CrateName = input.ReadString();
            break;
          }
          case 90: {
            ShortDesc = input.ReadString();
            break;
          }
          case 122: {
            Tags = input.ReadString();
            break;
          }
          case 240: {
            TimeCreated = input.ReadInt64();
            break;
          }
          case 248: {
            TimeBuilt = input.ReadInt64();
            break;
          }
          case 320: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 328: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 336: {
            BuildNumber = input.ReadInt32();
            break;
          }
          case 362: {
            BuildID = input.ReadString();
            break;
          }
          case 402: {
            HomeURL = input.ReadString();
            break;
          }
          case 442: {
            URL = input.ReadString();
            break;
          }
          case 480: {
            ApproxSize = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CrateManifest is the top-level manifest/catalog for a PLAN asset module called a "crate".
  /// It contains catalog and type info that PLAN loads at runtime to know what's inside binary asset bundles without having to load them.
  ///
  /// A reference to a PLAN asset is via a URI with the form:
  ///   assetURI := "PublisherID/CrateID[@CrateBuildID]/{AssetEntry.Pathname}"
  /// </summary>
  public sealed partial class CrateManifest : pb::IMessage<CrateManifest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CrateManifest> _parser = new pb::MessageParser<CrateManifest>(() => new CrateManifest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CrateManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrateManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrateManifest(CrateManifest other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      iconBundleName_ = other.iconBundleName_;
      bundles_ = other.bundles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CrateManifest Clone() {
      return new CrateManifest(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Amp.CrateInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Amp.CrateInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "IconBundleName" field.</summary>
    public const int IconBundleNameFieldNumber = 5;
    private string iconBundleName_ = "";
    /// <summary>
    /// IconBundleName is the bundle name ID of the bundle containing icons (Sprites) used to represent the "real" crate assets.
    /// Asset name IDs in this bundle correspond to assets in all the other Crate's bundles.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconBundleName {
      get { return iconBundleName_; }
      set {
        iconBundleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Bundles" field.</summary>
    public const int BundlesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Amp.BundleManifest> _repeated_bundles_codec
        = pb::FieldCodec.ForMessage(82, global::Amp.BundleManifest.Parser);
    private readonly pbc::RepeatedField<global::Amp.BundleManifest> bundles_ = new pbc::RepeatedField<global::Amp.BundleManifest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Amp.BundleManifest> Bundles {
      get { return bundles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CrateManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CrateManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (IconBundleName != other.IconBundleName) return false;
      if(!bundles_.Equals(other.bundles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (IconBundleName.Length != 0) hash ^= IconBundleName.GetHashCode();
      hash ^= bundles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (IconBundleName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IconBundleName);
      }
      bundles_.WriteTo(output, _repeated_bundles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (IconBundleName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IconBundleName);
      }
      bundles_.WriteTo(ref output, _repeated_bundles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (IconBundleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconBundleName);
      }
      size += bundles_.CalculateSize(_repeated_bundles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CrateManifest other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Amp.CrateInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.IconBundleName.Length != 0) {
        IconBundleName = other.IconBundleName;
      }
      bundles_.Add(other.bundles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Amp.CrateInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 42: {
            IconBundleName = input.ReadString();
            break;
          }
          case 82: {
            bundles_.AddEntriesFrom(input, _repeated_bundles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Amp.CrateInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 42: {
            IconBundleName = input.ReadString();
            break;
          }
          case 82: {
            bundles_.AddEntriesFrom(ref input, _repeated_bundles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CratesSnapshot is a general purpose container to track multiple crates and associated build IDs.
  /// </summary>
  public sealed partial class CratesSnapshot : pb::IMessage<CratesSnapshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CratesSnapshot> _parser = new pb::MessageParser<CratesSnapshot>(() => new CratesSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CratesSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Amp.AmpCratesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CratesSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CratesSnapshot(CratesSnapshot other) : this() {
      revID_ = other.revID_;
      downloadURL_ = other.downloadURL_;
      crates_ = other.crates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CratesSnapshot Clone() {
      return new CratesSnapshot(this);
    }

    /// <summary>Field number for the "RevID" field.</summary>
    public const int RevIDFieldNumber = 1;
    private long revID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RevID {
      get { return revID_; }
      set {
        revID_ = value;
      }
    }

    /// <summary>Field number for the "DownloadURL" field.</summary>
    public const int DownloadURLFieldNumber = 3;
    private string downloadURL_ = "";
    /// <summary>
    /// This is a template URL where the symbols "CrateURI", "CrateBuildID", "PlatformID" are delimited with { }.
    /// The symbol "{.}" is to be replaced with a local pathname if the URL refers to a local file system pathname.
    /// e.g. "https://whatever.com/{CrateURI}__{CrateBuildID}.{PlatformID}.crate"
    ///      "{.}/{CrateURI}__{CrateBuildID}.{PlatformID}.crate"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DownloadURL {
      get { return downloadURL_; }
      set {
        downloadURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Crates" field.</summary>
    public const int CratesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Amp.CrateInfo> _repeated_crates_codec
        = pb::FieldCodec.ForMessage(82, global::Amp.CrateInfo.Parser);
    private readonly pbc::RepeatedField<global::Amp.CrateInfo> crates_ = new pbc::RepeatedField<global::Amp.CrateInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Amp.CrateInfo> Crates {
      get { return crates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CratesSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CratesSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RevID != other.RevID) return false;
      if (DownloadURL != other.DownloadURL) return false;
      if(!crates_.Equals(other.crates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RevID != 0L) hash ^= RevID.GetHashCode();
      if (DownloadURL.Length != 0) hash ^= DownloadURL.GetHashCode();
      hash ^= crates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RevID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RevID);
      }
      if (DownloadURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DownloadURL);
      }
      crates_.WriteTo(output, _repeated_crates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RevID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RevID);
      }
      if (DownloadURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DownloadURL);
      }
      crates_.WriteTo(ref output, _repeated_crates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RevID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RevID);
      }
      if (DownloadURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownloadURL);
      }
      size += crates_.CalculateSize(_repeated_crates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CratesSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.RevID != 0L) {
        RevID = other.RevID;
      }
      if (other.DownloadURL.Length != 0) {
        DownloadURL = other.DownloadURL;
      }
      crates_.Add(other.crates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RevID = input.ReadInt64();
            break;
          }
          case 26: {
            DownloadURL = input.ReadString();
            break;
          }
          case 82: {
            crates_.AddEntriesFrom(input, _repeated_crates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RevID = input.ReadInt64();
            break;
          }
          case 26: {
            DownloadURL = input.ReadString();
            break;
          }
          case 82: {
            crates_.AddEntriesFrom(ref input, _repeated_crates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
